name: "CI"
on: ["push"]
jobs:
  lint:
    name: "Lint Code"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2

      - name: "Set Up NodeJS"
        uses: actions/setup-node@v2

      - name: "Install Dependencies"
        run: "npm ci"

      - name: "Lint Code"
        run: "npx eslint -f .github/workflows/formatter.js src/**/*.ts"

  build:
    name: "Build Container"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2

      - name: "Build Container"
        run: "docker build ."

  deploy:
    name: "Deploy Container"
    runs-on: "ubuntu-latest"
    if: ${{ github.repository == 'AerialFN/ControlPlane' && github.ref == 'refs/heads/master' }}
    needs: ["lint", "build"]
    environment: "production"

    # Cancel any deployments waiting for approval
    concurrency: 
      group: ${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2

      - name: "Build Container"
        run: "docker build -t gcr.io/aerial-fn/controlplane:${{ github.sha }} ."

      - name: "Authenticate with Google Cloud"
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: "Set Up Google Cloud SDK"
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: "aerial-fn"

      - name: "Authenticate with Container Registry"
        run: "gcloud auth configure-docker"

      - name: "Push Container"
        run: "docker push gcr.io/aerial-fn/controlplane:${{ github.sha }}"

      - name: "Deploy to Cloud Run"
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: "controlplane"
          image: "gcr.io/aerial-fn/controlplane:${{ github.sha }}"
          region: "us-central1"
